{"version":3,"file":"static/js/234.4713f60e.chunk.js","mappings":"mOACA,EAA2B,8BAA3B,EAAiE,2BAAjE,EAAkG,yBAAlG,EAAmI,2BAAnI,EAAuK,4BAAvK,EAA0M,0BAA1M,EAA8O,6BCA9O,EAA0B,yB,SCc1B,EAXgB,WAAO,IAAD,EACdA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAOH,GAExB,OACE,SAAC,KAAD,CAAMI,GAAE,UAAEF,EAASG,QAAQC,aAAnB,QAA4B,IAAKC,UAAWC,EAApD,iBAIH,E,SCoED,EA1EoB,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACRD,GAAe,IACfE,EAAAA,EAAAA,GAAW,SAAD,OAAUL,IACjBM,MAAK,SAAAC,GACJR,EAASQ,GACTJ,GAAe,EAChB,IACAK,MAAMC,QAAQC,IAClB,GAAE,CAACV,KAECF,EACH,OAAO,8BAAGI,IAAe,SAACS,EAAA,EAAD,MAE3B,IACEC,EAQEd,EARFc,MACAC,EAOEf,EAPFe,KACAC,EAMEhB,EANFgB,SACAC,EAKEjB,EALFiB,OACAC,EAIElB,EAJFkB,aACAC,EAGEnB,EAHFmB,eACAC,EAEEpB,EAFFoB,YACAC,EACErB,EADFqB,aAGIC,EAAM,yCAAqCF,GAE3CG,EAAYF,EAAaG,QAAQ,GACvC,OACE,iCACE,SAAC,EAAD,KACA,iBAAK3B,UAAWC,EAAhB,UACIsB,GAGA,gBACEK,IAAKH,EACLI,IAAKZ,GAASC,EACdY,MAAM,MACN9B,UAAWC,KANb,gBAAKD,UAAWC,KASlB,4BACE,gBAAID,UAAWC,EAAf,UACGgB,GAASC,EADZ,MACqBI,GAAkBD,GAAcU,MAAM,EAAG,GAD9D,QAIA,eAAG/B,UAAWC,EAAd,yBAAwCyB,EAAxC,UAEA,sCACA,uBAAIP,KAEJ,oCACA,uBAAIC,EAAOY,KAAI,qBAAGd,IAAH,IAAoBe,KAAK,eAG5C,4BACE,qDACA,SAAC,KAAD,CAAMpC,GAAG,OAAOG,UAAWC,EAA3B,mBAGA,SAAC,KAAD,CAAMJ,GAAG,UAAUG,UAAWC,EAA9B,yBAIF,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/MovieDetals/MovieDetals.module.scss?8efe","webpack://react-homework-template/./src/components/BtnBack/BtnBack.module.scss?b4d3","components/BtnBack/BtnBack.jsx","components/MovieDetals/MovieDetals.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardFilm\":\"MovieDetals_cardFilm__j9E8h\",\"title\":\"MovieDetals_title__yaISY\",\"img\":\"MovieDetals_img__FE+el\",\"score\":\"MovieDetals_score__vMBD-\",\"imgNot\":\"MovieDetals_imgNot__7k4fn\",\"cast\":\"MovieDetals_cast__9R2qv\",\"reviews\":\"MovieDetals_reviews__fA9zU\"};","// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"BtnBack_btnBack__Yshwc\"};","import { Link, useLocation } from 'react-router-dom';\nimport style from './BtnBack.module.scss';\nimport { useRef } from 'react';\n\nconst BtnBack = () => {\n  const location = useLocation();\n  const valueRef = useRef(location);\n\n  return (\n    <Link to={valueRef.current.state ?? '/'} className={style.btnBack}>\n      Back\n    </Link>\n  );\n};\n\nexport default BtnBack;\n","import { fetchMovie } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport style from './MovieDetals.module.scss';\nimport BtnBack from 'components/BtnBack/BtnBack';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetals = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const [showLoading, setShowLoading] = useState(false);\n\n  useEffect(() => {\n    setShowLoading(true);\n    fetchMovie(`movie/${movieId}`)\n      .then(data => {\n        setMovie(data);\n        setShowLoading(false);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!movie) {\n    return <>{showLoading && <Loader />}</>;\n  }\n  const {\n    title,\n    name,\n    overview,\n    genres,\n    release_date,\n    first_air_date,\n    poster_path,\n    vote_average,\n  } = movie;\n\n  const imgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  const userScore = vote_average.toFixed(1);\n  return (\n    <>\n      <BtnBack />\n      <div className={style.cardFilm}>\n        {!poster_path ? (\n          <div className={style.imgNot} />\n        ) : (\n          <img\n            src={imgUrl}\n            alt={title || name}\n            width=\"200\"\n            className={style.img}\n          />\n        )}\n        <div>\n          <h2 className={style.title}>\n            {title || name} ({(first_air_date || release_date).slice(0, 4)})\n          </h2>\n\n          <p className={style.score}>User Score: {userScore}/10</p>\n\n          <h3>Overview</h3>\n          <p>{overview}</p>\n\n          <h3>Genres</h3>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <div>\n        <h2>Addititonal information</h2>\n        <Link to=\"cast\" className={style.cast}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" className={style.reviews}>\n          Reviews\n        </Link>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetals;\n"],"names":["location","useLocation","valueRef","useRef","to","current","state","className","style","useState","movie","setMovie","movieId","useParams","showLoading","setShowLoading","useEffect","fetchMovie","then","data","catch","console","log","Loader","title","name","overview","genres","release_date","first_air_date","poster_path","vote_average","imgUrl","userScore","toFixed","src","alt","width","slice","map","join"],"sourceRoot":""}