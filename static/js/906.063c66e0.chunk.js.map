{"version":3,"file":"static/js/906.063c66e0.chunk.js","mappings":"kNACA,EAAuB,mBAAvB,EAAgD,kBAAhD,EAAgF,0B,2BC2DhF,EArDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRD,GAAe,IACfE,EAAAA,EAAAA,GAAW,SAAD,OAAUL,EAAV,aACPM,MAAK,SAAAC,GACJR,EAAQQ,EAAKT,MACbK,GAAe,EAChB,IACAK,MAAMC,QAAQC,IAClB,GAAE,CAACV,IAECF,GAKH,8BACGA,EAAKa,OAAS,GACb,wBACGb,EAAKc,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACrB,gBAAaC,UAAWC,EAAxB,UACGF,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKN,EACLG,UAAWC,EACXG,MAAM,SAGR,gBAAKJ,UAAWC,EAAhB,8BAEF,4BACE,wBACE,uBAAIJ,OAEN,wCACa,uBAAIC,YAhBZF,EADY,OAwBzB,yCA/BG,8BAAGZ,IAAe,SAACqB,EAAA,EAAD,KAmC5B,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.scss?0e19","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__Km-n9\",\"img\":\"Cast_img__-6jA+\",\"imgNotFound\":\"Cast_imgNotFound__Y9Bmv\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport style from './Cast.module.scss';\nimport { fetchMovie } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const [showLoading, setShowLoading] = useState(false);\n\n  useEffect(() => {\n    setShowLoading(true);\n    fetchMovie(`movie/${movieId}/credits`)\n      .then(data => {\n        setCast(data.cast);\n        setShowLoading(false);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!cast) {\n    return <>{showLoading && <Loader />}</>;\n  }\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.slice(0, 19).map(({ id, name, character, profile_path }) => (\n            <li key={id} className={style.item}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  className={style.img}\n                  width=\"100\"\n                />\n              ) : (\n                <div className={style.imgNotFound}>Image not found</div>\n              )}\n              <div>\n                <p>\n                  <b>{name}</b>\n                </p>\n                <p>\n                  Character: <b>{character}</b>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No casts</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","cast","setCast","movieId","useParams","showLoading","setShowLoading","useEffect","fetchMovie","then","data","catch","console","log","length","slice","map","id","name","character","profile_path","className","style","src","alt","width","Loader"],"sourceRoot":""}